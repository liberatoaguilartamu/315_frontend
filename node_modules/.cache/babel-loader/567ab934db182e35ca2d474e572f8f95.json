{"ast":null,"code":"import axios from \"axios\";\nimport { promptLogin } from '../js/login.js';\nexport default {\n  name: \"LoginForm\",\n  template: \"#login-form\",\n  data() {\n    return {\n      rememberMe: false,\n      username: \"\",\n      password: \"\"\n    };\n  },\n  beforeMount() {\n    let init = 1000;\n    setTimeout(function () {\n      document.querySelector(\".login-wrapper\").classList.toggle(\"open\");\n      init = 300;\n    }, init);\n  },\n  methods: {\n    isRememberMe() {\n      return this.rememberMe === true;\n    },\n    login() {\n      //we should handle errors in a more scalabe way, but this works for now\n\n      alert(this.username + \" \" + this.password + \" \" + this.rememberMe);\n      axios.post(\"http://api2.wisksolution.com/login\", {\n        body: {\n          username: this.username,\n          password: this.password\n        }\n      }).then(response => {\n        alert(response);\n        //handle response and save JWT\n      }).catch(err => {\n        alert(err);\n      });\n    },\n    register() {\n      alert(\"Coming soon ...\");\n    }\n  }\n};","map":{"version":3,"mappings":"AA8BA;AACA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;;MAEAC;MAEAC,MACAC;QACAC;UACAZ;UACAC;QACA;MACA,GACAY;QACAJ;QACA;MACA,GACAK;QACAL;MACA;IACA;IACAM;MACAN;IACA;EACA;AACA","names":["name","template","data","rememberMe","username","password","beforeMount","setTimeout","document","init","methods","isRememberMe","login","alert","axios","post","body","then","catch","register"],"sourceRoot":"src/components","sources":["LoginForm.vue"],"sourcesContent":["<template id=\"login-form\">\n    <div class=\"login-wrapper\">\n      <div class=\"login-left\">\n        <img height=\"100\" src=\"../views/pom.png\">\n      </div>\n      <form class=\"login-right\" @submit.prevent>\n        <div class=\"h2\">Login</div>\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"username\" placeholder=\"Username\" v-model=\"username\">\n          <label for=\"username\">Username</label>    \n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"Password\" placeholder=\"Password\" v-model=\"password\">\n          <label for=\"Password\">Password</label>    \n        </div>\n        <div class=\"checkbox-container\">\n          <input type=\"checkbox\" v-model=\"rememberMe\">\n          <div class=\"text-checkbox\">Remember me</div>\n        </div> \n        <div class=\"button-area\">\n        <!--\n          <button class=\"btn btn-primary pull-right\" @click=\"login()\" >Login</button>\n          -->\n            <div id=\"buttonDiv\"></div> \n        </div>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"axios\";\n  import { promptLogin } from '../js/login.js';\n  export default {\n    name: \"LoginForm\",\n    template: \"#login-form\",\n    data() {\n      return {\n        rememberMe: false,\n        username: \"\",\n        password: \"\"\n      };\n    },\n    beforeMount() {\n      let init = 1000;\n      setTimeout(function() {\n        document.querySelector(\".login-wrapper\").classList.toggle(\"open\");\n        init = 300;\n      }, init);\n    },\n    methods: {\n      isRememberMe() {\n        return this.rememberMe === true;\n      },\n      login() {\n        //we should handle errors in a more scalabe way, but this works for now\n  \n        alert(this.username + \" \" + this.password + \" \" + this.rememberMe);\n  \n        axios\n          .post(\"http://api2.wisksolution.com/login\", {\n            body: {\n              username: this.username,\n              password: this.password\n            }\n          })\n          .then(response => {\n            alert(response);\n            //handle response and save JWT\n          })\n          .catch(err => {\n            alert(err);\n          });\n      },\n      register() {\n        alert(\"Coming soon ...\");\n      }\n    }\n  };\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style>\n  * {\n    box-sizing: border-box;\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n  \n  #sandbox {\n    font-family: \"Lato\", sans-serif;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: row-reverse;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    background: linear-gradient(243.87deg, #22bf64 30.6%, #371933 130.6%);\n    overflow: hidden;\n  }\n  \n  input {\n    font-family: inherit;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    border: 0;\n    font-size: 16px;\n    color: #000;\n    border-radius: 0;\n    border-botton: 0;\n  }\n  \n  input[type=\"text\"],\n  input[type=\"password\"] {\n    width: 100%;\n    height: 40px;\n    border-bottom: 1px solid #aaaaaa;\n  }\n  \n  button,\n  input:focus {\n    outline: 0;\n  }\n  \n  ::-webkit-input-placeholder {\n    font-size: 16px;\n    font-weight: 300;\n    letter-spacing: -0.00933333em;\n  }\n  \n  .form-group {\n    position: relative;\n    padding-top: 15px;\n    margin-top: 10px;\n  }\n  \n  label {\n    position: absolute;\n    top: 0;\n    opacity: 1;\n    -webkit-transform: translateY(5px);\n    transform: translateY(5px);\n    color: #aaa;\n    font-weight: 300;\n    font-size: 13px;\n    letter-spacing: -0.00933333em;\n    transition: all 0.2s ease-out;\n  }\n  \n  input:placeholder-shown + label {\n    opacity: 0;\n    -webkit-transform: translateY(15px);\n    transform: translateY(15px);\n  }\n  \n  .h1 {\n    color: #fff;\n    opacity: 0.8;\n    font-size: 20px;\n    font-weight: 400;\n    text-transform: uppercase;\n    letter-spacing: 0.2405em;\n    transition: all 770ms cubic-bezier(0.51, 0.04, 0.12, 0.99);\n    text-align: center;\n    cursor: pointer;\n    position: absolute;\n    transform: translateY(-10px);\n  }\n  \n  .open .h1 {\n    -webkit-transform: translateX(200px) translateZ(0) translateY(-10px);\n    transform: translateX(200px) translateZ(0) translateY(-10px);\n  }\n  \n  .h2 {\n    color: #000;\n    font-size: 20px;\n    letter-spacing: -0.00933333em;\n    font-weight: 600;\n    padding-bottom: 15px;\n  }\n  \n  .login-wrapper {\n    width: 60vw;\n    height: 45vh;\n    top: 30vh;\n    left: 20vw;\n    background-color: #fff;\n    box-shadow: 0px 2px 50px rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    overflow: hidden;\n    position: fixed;\n  }\n  \n  .login-left {\n    width: 30vw;\n    height: 45vh;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n  }\n  \n  .login-left img {\n    display: block;\n    object-position: left;\n  }\n  \n  .login-right {\n    position: fixed;\n    top: 35vh;\n    left: 50vw;\n    width: 25vw;\n    height: 30vh;\n  }\n  \n  .checkbox-container {\n    display: flex;\n    margin-top: 35px;\n  }\n  \n  .text-checkbox {\n    color: #aaa;\n    font-size: 16px;\n    letter-spacing: -0.00933333em;\n    font-weight: 300;\n    margin-left: 15px;\n  }\n  \n  input[type=\"checkbox\"] {\n    cursor: pointer;\n    margin: 0;\n    height: 22px;\n    position: relative;\n    width: 22px;\n    -webkit-appearance: none;\n    transition: all 180ms linear;\n  }\n  \n  input[type=\"checkbox\"]:before {\n    border: 1px solid #aaa;\n    background-color: #fff;\n    content: \"\";\n    width: 20px;\n    height: 20px;\n    display: block;\n    border-radius: 2px;\n    transition: all 180ms linear;\n  }\n  \n  input[type=\"checkbox\"]:checked:before {\n    background: linear-gradient(198.08deg, #22bf64 45.34%, #e281e7 224.21%);\n    border: 1px solid #22bf64;\n  }\n  \n  input[type=\"checkbox\"]:after {\n    content: \"\";\n    border: 2px solid #fff;\n    border-right: 0;\n    border-top: 0;\n    display: block;\n    height: 4px;\n    left: 4px;\n    opacity: 0;\n    position: absolute;\n    top: 6px;\n    -webkit-transform: rotate(-45deg);\n    transform: rotate(-45deg);\n    width: 12px;\n    transition: all 180ms linear;\n  }\n  \n  input[type=\"checkbox\"]:checked:after {\n    opacity: 1;\n  }\n  \n  .button-area {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n  }\n  \n  .btn {\n    font-family: inherit;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: transparent;\n    border: none;\n    border-radius: 2px;\n    height: 40px;\n    padding: 0 35px;\n    cursor: pointer;\n    font-size: 16px;\n    text-transform: uppercase;\n    letter-spacing: -0.00933333em;\n  }\n  \n  .btn-primary {\n    \n    color: #fff;\n    background: linear-gradient(198.08deg, #22bf64 45.34%, #e281e7 224.21%);\n    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n    text-align: center;\n  }\n  \n  .btn-primary:hover,\n  .btn-primary:focus {\n    color: #fff;\n    background: linear-gradient(198.08deg, #1b984f 45.34%, #e281e7 224.21%);\n  }\n  \n  .btn-secondary {\n    color: #22bf64;\n  }\n  .btn-secondary:focus,\n  .btn-secondary:hover {\n    color: #1b984f;\n  }\n  </style>\n  \n"]},"metadata":{},"sourceType":"module"}