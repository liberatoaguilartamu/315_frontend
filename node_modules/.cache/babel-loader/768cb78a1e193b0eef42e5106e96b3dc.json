{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getInventory } from \"../js/backend.js\";\nimport { addItem } from \"../js/backend.js\";\nimport { addInventory } from \"../js/backend.js\";\nimport { updateItemItems } from \"../js/backend.js\";\nimport { updateItemInventory } from \"../js/backend.js\";\nimport { deleteItem } from \"../js/backend.js\";\nimport { deleteItemInventory } from '../js/backend.js';\nimport { insertOrder } from \"../js/backend.js\";\nimport { getQuantityById } from \"../js/backend.js\";\nimport { getIdFromName } from \"../js/backend.js\";\nimport { countItem } from \"../js/backend.js\";\nimport { countTopping } from \"../js/backend.js\";\nimport { getOrderItemDate } from \"../js/backend.js\";\nimport { getOrderToppingDate } from \"../js/backend.js\";\nimport { getBigBoyCount } from \"../js/backend.js\";\nimport { getBigBoy } from \"../js/backend.js\";\nimport { getItemsFromCategory } from \"../js/backend.js\";\nimport { getPrices } from \"../js/backend.js\";\nexport default {\n  async mounted() {\n    this.dates = [this.getToday()];\n    this.inventory = await getInventory();\n  },\n  data: () => ({\n    // Layout\n    justify: [\"space-between\"],\n    dates: [],\n    header: [],\n    dialog: false,\n    dialogDelete: false,\n    salesHeader: [{\n      text: \"Name\",\n      value: \"name\"\n    }, {\n      text: \"Price\",\n      value: \"price\"\n    }, {\n      text: \"Quantity\",\n      value: \"quantity\"\n    }, {\n      text: \"Revenue\",\n      value: \"revenue\"\n    }],\n    excessHeader: [{\n      text: \"Name\",\n      value: \"name\"\n    }, {\n      text: \"Category\",\n      value: \"category\"\n    }, {\n      text: \"Price\",\n      value: \"price\"\n    }, {\n      text: \"Sold in Time Frame\",\n      value: \"soldRange\"\n    }, {\n      text: \"Percent Sold\",\n      value: \"percentSold\"\n    }, {\n      text: \"Total Sold\",\n      value: \"totalSold\"\n    }, {\n      text: \"Item Quantity\",\n      value: \"itemQuantity\"\n    }, {\n      text: \"Batch Quantity\",\n      value: \"batchQuantity\"\n    }],\n    restockHeader: [{\n      text: \"Name\",\n      value: \"name\"\n    }, {\n      text: \"Category\",\n      value: \"category\"\n    }, {\n      text: \"Price\",\n      value: \"price\"\n    }, {\n      text: \"Sold in Time Frame\",\n      value: \"soldRange\"\n    }, {\n      text: \"Deficit\",\n      value: \"deficit\"\n    }, {\n      text: \"Total Sold\",\n      value: \"totalSold\"\n    }, {\n      text: \"Vendor\",\n      value: \"vendor\"\n    }, {\n      text: \"Purchase Price\",\n      value: \"purchasePrice\"\n    }, {\n      text: \"Batch Quantity\",\n      value: \"batchQuantity\"\n    }],\n    pairsHeader: [{\n      text: \"Entree\",\n      value: \"entree\"\n    }, {\n      text: \"Topping\",\n      value: \"topping\"\n    }, {\n      text: \"Occurences\",\n      value: \"occurences\"\n    }, {\n      text: \"Popular\",\n      value: \"popular\"\n    }],\n    inventoryHeader: [{\n      text: \"Inventory ID\",\n      value: \"id\"\n    }, {\n      text: \"Item ID\",\n      value: \"item_id\"\n    }, {\n      text: \"Name\",\n      value: \"name\"\n    }, {\n      text: \"Category\",\n      value: \"category\"\n    }, {\n      text: \"Price\",\n      value: \"price\"\n    }, {\n      text: \"Quantity\",\n      value: \"item_quantity\"\n    }, {\n      text: \"Number Sold\",\n      value: \"num_sold\"\n    }, {\n      text: \"Vendor\",\n      value: \"vendor\"\n    }, {\n      text: \"Purchase Price\",\n      value: \"purchase_price\"\n    }, {\n      text: \"Batch\",\n      value: \"batch_quantity\"\n    }, {\n      text: 'Edit',\n      value: 'edit',\n      sortable: false\n    }, {\n      text: 'Delete',\n      value: 'delete',\n      sortable: false\n    }],\n    items: [],\n    inventory: [],\n    editedIndex: -1,\n    salesReportRow: {\n      name: \"\",\n      price: 0.0,\n      quantity: 0,\n      revenue: 0\n    },\n    pairsRow: {\n      entree: \"\",\n      topping: \"\",\n      occurences: 0,\n      popular: false\n    },\n    defaultInventory: {\n      id: 0,\n      item_id: 0,\n      name: \"\",\n      category: \"\",\n      calories: 0,\n      price: 0.0,\n      item_quantity: 0,\n      num_sold: 0,\n      vendor: \"\",\n      purchase_price: 0.0,\n      batch_quantity: 0\n    },\n    editedInventory: {\n      id: 0,\n      item_id: 0,\n      name: \"\",\n      category: \"\",\n      calories: 0,\n      price: 0.0,\n      item_quantity: 0,\n      num_sold: 0,\n      vendor: \"\",\n      purchase_price: 0.0,\n      batch_quantity: 0\n    }\n  }),\n  computed: {\n    dateRangeText() {\n      if (this.dates.length === 0) {\n        return \"Select two dates\";\n      } else {\n        return this.dates.join(\" â€“ \").replaceAll(\"-\", \"/\");\n      }\n    },\n    createTitle() {\n      if (this.editedIndex == -1) {\n        return 'Add New Item';\n      } else {\n        return 'Edit Existing Item';\n      }\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  methods: {\n    click_report: function (e) {\n      if (e === \"Sales\") {\n        this.header = this.salesHeader;\n        this.items = [];\n        this.items.push({\n          name: \"Gyro\",\n          price: 1.0,\n          quantity: 4,\n          revenue: 11.0\n        });\n      } else if (e === \"Excess\") {\n        this.header = this.excessHeader;\n        this.items = [];\n      } else if (e === \"Restock\") {\n        this.header = this.restockHeader;\n        this.items = [];\n      } else if (e === \"Pairs\") {\n        this.header = this.pairsHeader;\n        this.items = [];\n        this.items.push({\n          entree: \"Gyro\",\n          topping: \"Chicken\",\n          occurences: 4,\n          popular: true\n        });\n      }\n    },\n    editItem(item) {\n      this.editedInventory = Object.assign({}, item);\n      this.editedIndex = this.editedInventory.item_id;\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      this.editedInventory = Object.assign({}, item);\n      this.editedIndex = this.editedInventory.item_id;\n      this.dialogDelete = true;\n    },\n    async deleteItemConfirm() {\n      // SAFEGUARD TO PREVENT ACCIDENTAL DELETION\n      console.log(this.editedIndex);\n      if (this.editedIndex > 22) {\n        await deleteItemInventory(this.editedIndex);\n        await deleteItem(this.editedIndex);\n      }\n      this.inventory = await getInventory();\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedInventory = Object.assign({}, this.defaultInventory);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedInventory = Object.assign({}, this.defaultInventory);\n        this.editedIndex = -1;\n      });\n    },\n    async save() {\n      var temp = this.editedInventory;\n      if (this.editedIndex > -1) {\n        await updateItemItems(temp.name, temp.price, this.editedIndex);\n        await updateItemInventory(temp.name, this.editedIndex);\n      } else {\n        await addItem(temp.item_id, temp.name, temp.category, temp.price, temp.calories);\n        await addInventory(temp.id, temp.item_id, temp.name, temp.item_quantity, temp.num_sold, temp.vendor, temp.purchase_price, temp.batch_quantity);\n      }\n      this.inventory = await getInventory();\n      this.close();\n    },\n    getToday() {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\n      var yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      console.log(today);\n      return today;\n    }\n  }\n};","map":{"version":3,"mappings":";AAgPA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;EACA;IACA;IACA;EACA;EAEAA;IACA;IACAC;IAEAC;IACAC;IAEAC;IACAC;IAEAC,cACA;MAAAC;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,EACA;IAEAC,eACA;MAAAF;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,EACA;IAEAE,gBACA;MAAAH;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,EACA;IAEAG,cACA;MAAAJ;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,EACA;IAEAI,kBACA;MAAAL;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;MAAAK;IAAA,GACA;MAAAN;MAAAC;MAAAK;IAAA,EACA;IAEAC;IAEAC;IACAC;IAEAC;MACAC;MACAC;MACAC;MACAC;IACA;IAEAC;MACAC;MACAC;MACAC;MACAC;IACA;IAEAC;MACAC;MACAC;MACAX;MACAY;MACAC;MACAZ;MACAa;MACAC;MACAC;MACAC;MACAC;IACA;IAEAC;MACAT;MACAC;MACAX;MACAY;MACAC;MACAZ;MACAa;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MACA,4BACA;QACA;MACA,OAEA;QACA;MACA;IACA;EACA;EAEAC;IACArC;MACAsC;IACA;IACArC;MACAqC;IACA;EACA;EAEAC;IACAC;MACA;QACA;QACA;QACA;UACA1B;UACAC;UACAC;UACAC;QACA;MACA;QACA;QACA;MACA;QACA;QACA;MACA;QACA;QACA;QACA;UACAE;UACAC;UACAC;UACAC;QACA;MACA;IACA;IAEAmB;MACA;MACA;MACA;IACA;IAGAC;MACA;MACA;MACA;IACA;IAEA;MACA;MACAC;MACA,2BACA;QACA;QACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;MACA;IACA;IAEA;MACA;MACA;QACA;QACA;MACA,OACA;QACA;QACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACAC;MACAJ;MACA;IACA;EACA;AACA","names":["data","justify","dates","header","dialog","dialogDelete","salesHeader","text","value","excessHeader","restockHeader","pairsHeader","inventoryHeader","sortable","items","inventory","editedIndex","salesReportRow","name","price","quantity","revenue","pairsRow","entree","topping","occurences","popular","defaultInventory","id","item_id","category","calories","item_quantity","num_sold","vendor","purchase_price","batch_quantity","editedInventory","computed","dateRangeText","createTitle","watch","val","methods","click_report","editItem","deleteItem","console","close","closeDelete","getToday","today"],"sourceRoot":"src/views","sources":["ManagerView.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container class=\"Top\">\n      <v-row v-for=\"j in justify\" :key=\"j\" :justify=\"j\">\n        <v-col v-for=\"k in 1\" :key=\"k\">\n          <!--Server Button-->\n          <router-link\n            :key=\"$route.path\"\n            :to=\"{ path: '/server' }\"\n            style=\"text-decoration: none; color: inherit\"\n          >\n            <v-btn outlined color=\"orange\">Server View</v-btn>\n          </router-link>\n          <router-view :key=\"$route.fullPath\"></router-view>\n          <!--Manager Button-->\n          <v-btn elevation=\"2\" class=\"ma-2\" color=\"warning\">Manager View</v-btn>\n        </v-col>\n          <!-- <v-col v-for=\"k in 1\" :key=\"k\">\n            <v-btn elevation=\"2\" class=\"ma-2\" outlined color=\"green\"\n              >Colorblind Mode</v-btn\n            >\n        </v-col> -->\n      </v-row>\n    </v-container>\n\n    <v-container class=\"Mid\">\n      <center>\n        <h1 class=\"font-weight-bold\">Order Trends</h1>\n      </center>\n      <br />\n      <v-row v-for=\"j in justify\" :key=\"j\" :justify=\"j\">\n        <!--Left side-->\n        <v-row>\n          <v-col cols=\"12\" sm=\"4\">\n            <v-date-picker v-model=\"dates\" range></v-date-picker>\n            <v-text-field\n              v-model=\"dateRangeText\"\n              label=\"Date range\"\n              prepend-icon=\"mdi-calendar\"\n              readonly\n            ></v-text-field>\n\n            <v-card>\n              <center>\n                <p class=\"font-weight-bold\">Generate</p>\n                <v-btn\n                  @click=\"click_report('Sales')\"\n                  elevation=\"2\"\n                  class=\"ma-2\"\n                  outlined\n                  color=\"orange\"\n                  large\n                  >Sales Report\n                </v-btn>\n                <v-btn\n                  @click=\"click_report('Excess')\"\n                  elevation=\"2\"\n                  class=\"ma-2\"\n                  outlined\n                  color=\"orange\"\n                  large\n                  >Excess Report\n                </v-btn>\n                <v-btn\n                  @click=\"click_report('Restock')\"\n                  elevation=\"2\"\n                  class=\"ma-2\"\n                  outlined\n                  color=\"orange\"\n                  large\n                  >Restock Report\n                </v-btn>\n                <v-btn\n                  @click=\"click_report('Pairs')\"\n                  elevation=\"2\"\n                  class=\"ma-2\"\n                  outlined\n                  color=\"orange\"\n                  large\n                  >Pairs Together\n                </v-btn>\n              </center>\n            </v-card>\n          </v-col>\n\n          <!--Right side-->\n          <v-col v-for=\"k in 1\" :key=\"k\">\n            <v-data-table :headers=\"header\" :items=\"items\" class=\"elevation-1\">\n            </v-data-table>\n          </v-col>\n        </v-row>\n      </v-row>\n    </v-container>\n\n    <v-container class=\"Bottom\">\n      <v-col v-for=\"j in justify\" :key=\"j\" :justify=\"j\">\n        <center>\n          <h1 class=\"font-weight-bold\">Inventory</h1>\n        </center>\n        <v-data-table :headers=\"inventoryHeader\" :items=\"inventory\" sort-by=\"id\" class=\"elevation-1\">\n          <template v-slot:top>\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\n            <v-spacer></v-spacer>\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\n              <template v-slot:activator=\"{ on, attrs }\">\n                <center>\n                  <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n                    Add New Item\n                  </v-btn>\n                </center>\n              </template>\n\n              <v-card>\n                <v-card-title>\n                  <span class=\"text-h5\">{{ createTitle }}</span>\n                </v-card-title>\n\n                <v-card-text>\n                  <v-container>\n                    <v-row>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.id\"\n                          label=\"Inventory ID\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.item_id\"\n                          label=\"Item Id\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.name\"\n                          label=\"Name\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.category\"\n                          label=\"Category\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.price\"\n                          label=\"Price\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.calories\"\n                          label=\"Calories\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.item_quantity\"\n                          label=\"Quantity\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.num_sold\"\n                          label=\"Number Sold\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.vendor\"\n                          label=\"Vendor\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.purchase_price\"\n                          label=\"Purchase Price\"\n                        ></v-text-field>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field\n                          v-model=\"editedInventory.batch_quantity\"\n                          label=\"Batch\"\n                        ></v-text-field>\n                      </v-col>\n                    </v-row>\n                  </v-container>\n                </v-card-text>\n\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"close\"> Cancel </v-btn>\n                  <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n              <v-card>\n                <v-card-title class=\"text-h5\"\n                  >Delete this item?</v-card-title\n                >\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                    >Cancel</v-btn\n                  >\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                    >Ok</v-btn\n                  >\n                  <v-spacer></v-spacer>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </template>\n          <template v-slot:item.edit=\"{ item }\">\n            <v-icon\n              small\n              class=\"mr-2\"\n              @click=\"editItem(item)\"\n            >\n              mdi-pencil\n            </v-icon>\n            </template>\n          <template v-slot:item.delete=\"{ item }\">\n            <v-icon\n              small\n              class=\"mr-2\"\n              @click=\"deleteItem(item)\"\n            >\n              mdi-delete\n            </v-icon>\n          </template>\n        </v-data-table>\n      </v-col>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { getInventory } from \"../js/backend.js\";\nimport { addItem } from \"../js/backend.js\";\nimport { addInventory } from \"../js/backend.js\";\nimport { updateItemItems } from \"../js/backend.js\";\nimport { updateItemInventory } from \"../js/backend.js\";\nimport { deleteItem } from \"../js/backend.js\";\nimport { deleteItemInventory } from '../js/backend.js';\n\n\nimport { insertOrder } from \"../js/backend.js\";\nimport { getQuantityById } from \"../js/backend.js\";\nimport { getIdFromName } from \"../js/backend.js\";\nimport { countItem } from \"../js/backend.js\";\nimport { countTopping } from \"../js/backend.js\";\nimport { getOrderItemDate } from \"../js/backend.js\";\nimport { getOrderToppingDate } from \"../js/backend.js\";\nimport { getBigBoyCount } from \"../js/backend.js\";\nimport { getBigBoy } from \"../js/backend.js\";\nimport { getItemsFromCategory } from \"../js/backend.js\";\nimport { getPrices } from \"../js/backend.js\";\n\n\nexport default {\n  async mounted() {\n    this.dates = [this.getToday()]\n    this.inventory = await getInventory();\n  },\n\n  data: () => ({\n    // Layout\n    justify: [\"space-between\"],\n\n    dates: [],\n    header: [],\n\n    dialog: false,\n    dialogDelete: false,\n\n    salesHeader: [\n      { text: \"Name\", value: \"name\" },\n      { text: \"Price\", value: \"price\" },\n      { text: \"Quantity\", value: \"quantity\" },\n      { text: \"Revenue\", value: \"revenue\" },\n    ],\n\n    excessHeader: [\n      { text: \"Name\", value: \"name\" },\n      { text: \"Category\", value: \"category\" },\n      { text: \"Price\", value: \"price\" },\n      { text: \"Sold in Time Frame\", value: \"soldRange\" },\n      { text: \"Percent Sold\", value: \"percentSold\" },\n      { text: \"Total Sold\", value: \"totalSold\" },\n      { text: \"Item Quantity\", value: \"itemQuantity\" },\n      { text: \"Batch Quantity\", value: \"batchQuantity\" },\n    ],\n\n    restockHeader: [\n      { text: \"Name\", value: \"name\" },\n      { text: \"Category\", value: \"category\" },\n      { text: \"Price\", value: \"price\" },\n      { text: \"Sold in Time Frame\", value: \"soldRange\" },\n      { text: \"Deficit\", value: \"deficit\" },\n      { text: \"Total Sold\", value: \"totalSold\" },\n      { text: \"Vendor\", value: \"vendor\" },\n      { text: \"Purchase Price\", value: \"purchasePrice\" },\n      { text: \"Batch Quantity\", value: \"batchQuantity\" },\n    ],\n\n    pairsHeader: [\n      { text: \"Entree\", value: \"entree\" },\n      { text: \"Topping\", value: \"topping\" },\n      { text: \"Occurences\", value: \"occurences\" },\n      { text: \"Popular\", value: \"popular\" },\n    ],\n\n    inventoryHeader: [\n      { text: \"Inventory ID\", value: \"id\"},\n      { text: \"Item ID\", value: \"item_id\" },\n      { text: \"Name\", value: \"name\" },\n      { text: \"Category\", value: \"category\" },\n      { text: \"Price\", value: \"price\" },\n      { text: \"Quantity\", value: \"item_quantity\" },\n      { text: \"Number Sold\", value: \"num_sold\" },\n      { text: \"Vendor\", value: \"vendor\" },\n      { text: \"Purchase Price\", value: \"purchase_price\" },\n      { text: \"Batch\", value: \"batch_quantity\" },\n      { text: 'Edit', value: 'edit', sortable: false },\n      { text: 'Delete', value: 'delete', sortable: false },\n    ],\n\n    items: [],\n\n    inventory: [],\n    editedIndex: -1,\n\n    salesReportRow: {\n      name: \"\",\n      price: 0.0,\n      quantity: 0,\n      revenue: 0,\n    },\n\n    pairsRow: {\n      entree: \"\",\n      topping: \"\",\n      occurences: 0,\n      popular: false,\n    },\n\n    defaultInventory: {\n      id: 0,\n      item_id: 0,\n      name: \"\",\n      category: \"\",\n      calories: 0,\n      price: 0.0,\n      item_quantity: 0,\n      num_sold: 0,\n      vendor: \"\",\n      purchase_price: 0.0,\n      batch_quantity: 0,\n    },\n\n    editedInventory: {\n      id: 0,\n      item_id: 0,\n      name: \"\",\n      category: \"\",\n      calories: 0,\n      price: 0.0,\n      item_quantity: 0,\n      num_sold: 0,\n      vendor: \"\",\n      purchase_price: 0.0,\n      batch_quantity: 0,\n    },\n  }),\n  computed: {\n    dateRangeText() {\n      if (this.dates.length === 0) {\n        return \"Select two dates\";\n      } else {\n        return this.dates.join(\" â€“ \").replaceAll(\"-\",\"/\");\n      }\n    },\n\n    createTitle () {\n       if(this.editedIndex == -1)\n       {\n        return 'Add New Item'\n       }\n       else\n       {\n        return 'Edit Existing Item'\n       }\n      },\n  },\n\n  watch: {\n      dialog (val) {\n        val || this.close()\n      },\n      dialogDelete (val) {\n        val || this.closeDelete()\n      },\n    },\n\n  methods: {\n    click_report: function (e) {\n      if (e === \"Sales\") {\n        this.header = this.salesHeader;\n        this.items = [];\n        this.items.push({\n          name: \"Gyro\",\n          price: 1.0,\n          quantity: 4,\n          revenue: 11.0,\n        });\n      } else if (e === \"Excess\") {\n        this.header = this.excessHeader;\n        this.items = [];\n      } else if (e === \"Restock\") {\n        this.header = this.restockHeader;\n        this.items = [];\n      } else if (e === \"Pairs\") {\n        this.header = this.pairsHeader;\n        this.items = [];\n        this.items.push({\n          entree: \"Gyro\",\n          topping: \"Chicken\",\n          occurences: 4,\n          popular: true,\n        });\n      }\n    },\n\n    editItem(item) {\n      this.editedInventory = Object.assign({}, item);\n      this.editedIndex = this.editedInventory.item_id\n      this.dialog = true;\n    },\n\n\n    deleteItem (item) {\n        this.editedInventory = Object.assign({}, item)\n        this.editedIndex = this.editedInventory.item_id;\n        this.dialogDelete = true\n    },\n      \n   async deleteItemConfirm () {\n        // SAFEGUARD TO PREVENT ACCIDENTAL DELETION\n        console.log(this.editedIndex)\n        if(this.editedIndex > 22)\n        {\n          await deleteItemInventory(this.editedIndex);\n          await deleteItem(this.editedIndex);\n        }\n        this.inventory = await getInventory();\n        this.closeDelete()\n      },\n\n    close () {\n        this.dialog = false\n        this.$nextTick(() => {\n          this.editedInventory = Object.assign({}, this.defaultInventory)\n          this.editedIndex = -1\n        })\n      },\n\n      closeDelete () {\n        this.dialogDelete = false\n        this.$nextTick(() => {\n          this.editedInventory = Object.assign({}, this.defaultInventory)\n          this.editedIndex = -1\n        })\n      },\n\n    async save() {\n      var temp = this.editedInventory;\n      if (this.editedIndex > -1) {\n        await updateItemItems(temp.name,temp.price,this.editedIndex);\n        await updateItemInventory(temp.name,this.editedIndex)\n      }\n      else{\n        await addItem(temp.item_id,temp.name,temp.category,temp.price,temp.calories);\n        await addInventory(temp.id,temp.item_id,temp.name,temp.item_quantity,temp.num_sold,temp.vendor,temp.purchase_price,temp.batch_quantity);\n      }\n      this.inventory = await getInventory();\n      this.close();\n    },\n\n    getToday() {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0');\n      var yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      console.log(today);\n      return today;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}